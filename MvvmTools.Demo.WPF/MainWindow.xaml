<Window x:Class="MvvmTools.Demo.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MvvmTools.Demo.WPF"
        xmlns:tools="clr-namespace:MvvmTools.WPF;assembly=MvvmTools.WPF"
        mc:Ignorable="d" Name="root"
        Title="MainWindow" Height="458.831" Width="539.29">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <tools:CommandsCollection x:Key="CommandCollection">
            <tools:CommandSource Command="{Binding DataContext.ExecCommand, Source={x:Reference root}}" />
            <tools:CommandSource Command="{Binding DataContext.ExecWithParameterCommand, Source={x:Reference root}}"/>
            <tools:CommandSource Command="{Binding DataContext.ExecWithParameterCommand, Source={x:Reference root}}"
                                 Parameter="This is a custom parameter command." UseOwnParameter="True"/>
        </tools:CommandsCollection>
    </Window.Resources>
    <StackPanel>
        <CheckBox Content="Enable all commands" IsChecked="{Binding EnableAllCommands}"/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Parameter:"/>
            <TextBox Name="Parameter" Grid.Column="1" Text="Test" />
        </Grid>
        <Button Content="Execute command without parameter" Command="{Binding ExecCommand}"/>
        <Button Content="Execute command with parameter" 
                Command="{Binding ExecWithParameterCommand}"
                CommandParameter="{Binding Text,Source={x:Reference Parameter}}"/>
        <Button Content="Execute Multiple commands" 
                Command="{StaticResource CommandCollection}"
                CommandParameter="{Binding Text,Source={x:Reference Parameter}}">
        </Button>
        <!--<Button Content="Execute method without parameter {ToMethod}" Click="{tools:ToMethod Exec}"/>
        <Button Content="Execute method with parameter {ToMethod}" 
                Click="{tools:ToMethod ExecWithParameter,ParameterBinding={Binding Text,Source={x:Reference Parameter}}}"/>
        <Button Content="Execute method on mouse right button up {ToMethod}" MouseRightButtonUp="{tools:ToMethod Exec}"/>-->
        <Button Content="Execute method on mouse click and Leave {to attached collection}" 
                tools:Events.Bindings="Click=Exec , MouseLeave=ExecWithParameter($Parameter.Text)"/>
        <Button Content="Execute method on mouse click from different data context {to attached collection}" DataContext="{x:Type Color}"
                tools:Events.Bindings="Click=$root.DataContext.ExecWithParameter($Parameter.Text)"/>
    </StackPanel>
</Window>
